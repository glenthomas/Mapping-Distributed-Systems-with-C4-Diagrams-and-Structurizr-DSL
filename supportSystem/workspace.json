{
  "configuration" : { },
  "description" : "Architecture for our online retail business",
  "documentation" : {
    "decisions" : [ {
      "content" : "# 1. Record architecture decisions\n\nDate: 2025-08-28\n\n## Status\n\nAccepted\n\n## Context\n\nWe need to record the architectural decisions made on this project.\n\n## Decision\n\nWe will use Architecture Decision Records, as described by Michael Nygard in this article: [http://thinkrelevance.com/blog/2011/11/15/documenting-architecture-decisions](http://thinkrelevance.com/blog/2011/11/15/documenting-architecture-decisions)\n\n## Consequences\n\nSee Michael Nygard's article, linked above.",
      "date" : "2025-08-28T00:00:00Z",
      "format" : "Markdown",
      "id" : "1",
      "status" : "Accepted",
      "title" : "Record architecture decisions"
    }, {
      "content" : "# 2. Adopt Microservices Architecture\n\nDate: 2025-08-28\n\n## Status\n\nAccepted\n\n## Context\n\nWe need to design a scalable e-commerce platform that can handle multiple domains including core e-commerce functionality, order fulfillment, and marketing automation. The system needs to support:\n\n- High availability and scalability\n- Independent deployment of different business capabilities\n- Different teams working on different parts of the system\n- Technology diversity for optimal solutions per domain\n\n## Decision\n\nWe will adopt a microservices architecture pattern, organizing our system into the following bounded contexts:\n\n1. **E-commerce System** - Core customer-facing functionality\n2. **Fulfillment System** - Order processing and inventory management\n3. **Marketing System** - Campaign management and customer engagement\n4. **Support System** - Customer service and support tools\n\nEach system will be composed of focused microservices with dedicated databases following the database-per-service pattern.\n\n## Consequences\n\n**Positive:**\n- Independent scaling of different business capabilities\n- Technology diversity - teams can choose optimal tech stack per service\n- Fault isolation - issues in one service don't bring down the entire system\n- Independent deployment and release cycles\n- Clear ownership boundaries for different teams\n\n**Negative:**\n- Increased operational complexity\n- Network latency between services\n- Data consistency challenges across services\n- More complex testing and debugging\n- Need for sophisticated monitoring and observability\n\n**Mitigation:**\n- Implement comprehensive monitoring and logging\n- Use message queues for asynchronous communication\n- Establish clear service contracts and API versioning\n- Invest in CI/CD pipeline automation\n",
      "date" : "2025-08-28T00:00:00Z",
      "format" : "Markdown",
      "id" : "2",
      "status" : "Accepted",
      "title" : "Adopt Microservices Architecture"
    }, {
      "content" : "# 3. Use Polyglot Persistence Strategy\n\nDate: 2025-08-28\n\n## Status\n\nAccepted\n\n## Context\n\nDifferent parts of our e-commerce platform have varying data requirements:\n\n- User accounts need ACID transactions and relational integrity\n- Product catalogs benefit from flexible schema and fast reads\n- Order data requires strong consistency and auditability\n- Marketing analytics need fast aggregations and flexible querying\n- Inventory tracking requires real-time updates and consistency\n\nA single database technology cannot optimally serve all these diverse needs.\n\n## Decision\n\nWe will implement a polyglot persistence strategy using different database technologies optimised for specific use cases:\n\n- **PostgreSQL** for transactional data (users, orders, campaigns, analytics)\n- **MongoDB** for flexible schema data (product catalogs, customer segments, inventory)\n- **MySQL** for warehouse operations data (established team expertise)\n\nEach microservice will own its data and database, following the database-per-service pattern.\n\n## Consequences\n\n**Positive:**\n- Optimal performance for each data access pattern\n- Services can evolve their data models independently\n- Technology choice matches team expertise and use case requirements\n- Better scalability through specialised database optimisations\n\n**Negative:**\n- Increased operational complexity managing multiple database technologies\n- Cross-service queries become more complex\n- Need for multiple database administration skills\n- Data consistency challenges across different database systems\n- Backup and disaster recovery complexity\n\n**Mitigation:**\n- Implement robust monitoring for all database technologies\n- Use event-driven architecture for data synchronisation\n- Establish clear data ownership boundaries\n- Invest in database administration training and tooling\n",
      "date" : "2025-08-28T00:00:00Z",
      "format" : "Markdown",
      "id" : "3",
      "status" : "Accepted",
      "title" : "Use Polyglot Persistence Strategy"
    }, {
      "content" : "# 4. Implement Event-Driven Architecture with Message Queues\n\nDate: 2025-08-28\n\n## Status\n\nAccepted\n\n## Context\n\nOur microservices architecture requires reliable communication between services. We need to handle:\n\n- Order processing workflows that span multiple services\n- Real-time inventory updates across fulfillment and e-commerce systems\n- Marketing campaign triggers based on customer behavior\n- Asynchronous notifications and email sending\n- Decoupling of services to prevent cascading failures\n\nSynchronous API calls alone would create tight coupling and potential cascade failures.\n\n## Decision\n\nWe will implement event-driven architecture using message queues for asynchronous communication:\n\n- **Apache Kafka** for high-throughput event streaming (e-commerce and marketing systems)\n- **RabbitMQ** for reliable message delivery (fulfillment system)\n\nServices will publish domain events (order placed, payment processed, inventory updated) and subscribe to relevant events from other services.\n\n## Consequences\n\n**Positive:**\n- Loose coupling between services\n- Better resilience - services can handle temporary unavailability of dependencies\n- Scalability - async processing allows for better resource utilisation\n- Audit trail - events provide natural business process logging\n- Flexibility - new services can easily subscribe to existing events\n\n**Negative:**\n- Eventual consistency - data may be temporarily inconsistent across services\n- Complexity in handling message ordering and duplicate processing\n- Debugging distributed workflows becomes more challenging\n- Need for sophisticated monitoring of message queues\n- Potential message loss scenarios need handling\n\n**Mitigation:**\n- Implement idempotent message handlers\n- Use message deduplication strategies\n- Establish clear event schemas and versioning\n- Implement comprehensive monitoring and alerting\n- Design for graceful degradation when message queues are unavailable\n",
      "date" : "2025-08-28T00:00:00Z",
      "format" : "Markdown",
      "id" : "4",
      "status" : "Accepted",
      "title" : "Implement Event-Driven Architecture with Message Queues"
    }, {
      "content" : "# 5. Use API Gateway Pattern\n\nDate: 2025-08-28\n\n## Status\n\nAccepted\n\n## Context\n\nWith multiple microservices, we face challenges with:\n\n- Client applications needing to know about multiple service endpoints\n- Cross-cutting concerns like authentication, rate limiting, and logging\n- Different API versions and protocols across services\n- Security policies and access control\n- Load balancing and service discovery\n\nDirect client-to-service communication would create tight coupling and duplicate cross-cutting functionality.\n\n## Decision\n\nWe will implement the API Gateway pattern using Spring Cloud Gateway for both e-commerce and marketing systems:\n\n- Single entry point for all client API requests\n- Handle cross-cutting concerns (authentication, rate limiting, CORS)\n- Route requests to appropriate microservices\n- API composition and protocol translation\n- Request/response transformation and validation\n\n## Consequences\n\n**Positive:**\n- Simplified client development - single endpoint to manage\n- Centralised handling of cross-cutting concerns\n- Better security through single controlled entry point\n- Easier API versioning and backward compatibility\n- Load balancing and failover capabilities\n- Centralised logging and monitoring of API calls\n\n**Negative:**\n- Potential single point of failure\n- Additional network hop adds latency\n- Gateway becomes a bottleneck if not properly scaled\n- Complexity in managing routing rules\n- Risk of creating a distributed monolith if gateway becomes too intelligent\n\n**Mitigation:**\n- Implement high availability for API gateways\n- Keep gateway logic lightweight - focus on routing and cross-cutting concerns\n- Use circuit breakers to handle downstream service failures\n- Implement proper caching strategies\n- Monitor gateway performance and scale horizontally as needed\n",
      "date" : "2025-08-28T00:00:00Z",
      "format" : "Markdown",
      "id" : "5",
      "status" : "Accepted",
      "title" : "Use API Gateway Pattern"
    }, {
      "content" : "# 6. Adopt Technology Diversity Strategy\n\nDate: 2025-08-28\n\n## Status\n\nAccepted\n\n## Context\n\nDifferent services in our platform have varying requirements and our development teams have different expertise:\n\n- Some services require high-performance concurrent processing\n- Others need rapid development and flexibility\n- Team expertise spans Java, Node.js, Python, and Go\n- Different domains may benefit from specialised frameworks and libraries\n- We want to leverage the best tools for each specific use case\n\n## Decision\n\nWe will adopt a controlled technology diversity approach with the following technology stack:\n\n**Backend Services:**\n- **Spring Boot/Java** - User Service, Order Management (enterprise-grade, strong consistency)\n- **Node.js/Express** - Catalog Service, Inventory Service, Email Campaigns (rapid development, JSON handling)\n- **Python/FastAPI** - Payment Service, Analytics Services (data processing, ML libraries)\n- **Go** - Shipping Service (high-performance, concurrent processing)\n\n**Frontend:**\n- **React/JavaScript** - Web Application and Admin Panel (team expertise, component reusability)\n\n**Infrastructure:**\n- **Spring Cloud Gateway** - API Gateways (Java ecosystem integration)\n\n## Consequences\n\n**Positive:**\n- Optimal technology choice for each service's requirements\n- Leverages existing team expertise effectively\n- Allows teams to use best-in-class libraries and frameworks\n- Enables hiring specialists in different technologies\n- Services can evolve independently with their optimal tech stack\n\n**Negative:**\n- Increased operational complexity with multiple runtimes\n- Need for diverse skillsets in the team\n- Different deployment and monitoring approaches\n- Potential knowledge silos\n- More complex CI/CD pipeline setup\n\n**Mitigation:**\n- Establish common patterns for logging, monitoring, and health checks\n- Use containerisation (Docker) to standardise deployment\n- Create shared libraries and templates for common functionality\n- Implement cross-training programs for critical services\n- Maintain clear documentation and architectural guidelines\n",
      "date" : "2025-08-28T00:00:00Z",
      "format" : "Markdown",
      "id" : "6",
      "status" : "Accepted",
      "title" : "Adopt Technology Diversity Strategy"
    }, {
      "content" : "# 7. Separate E-commerce and Fulfillment Systems\n\nDate: 2025-08-28\n\n## Status\n\nAccepted\n\n## Context\n\nTraditional e-commerce architectures often tightly couple order management with fulfillment processes. However, we have identified distinct concerns:\n\n**E-commerce System Concerns:**\n- Customer experience and order capture\n- Product catalog management\n- Payment processing\n- User account management\n\n**Fulfillment System Concerns:**\n- Inventory management and reservations\n- Warehouse operations (picking, packing)\n- Shipping carrier integration\n- Order tracking and notifications\n\nThese domains have different scaling patterns, business rules, and operational requirements.\n\n## Decision\n\nWe will implement separate E-commerce and Fulfillment systems as distinct bounded contexts:\n\n**E-commerce System** will handle:\n- Customer-facing web application\n- Product catalog and search\n- Order placement and payment processing\n- Customer account management\n\n**Fulfillment System** will handle:\n- Order management and validation\n- Inventory tracking and reservations\n- Warehouse operations coordination\n- Shipping and delivery management\n\nCommunication between systems will be event-driven, with the E-commerce system publishing order events that the Fulfillment system consumes.\n\n## Consequences\n\n**Positive:**\n- Clear separation of business concerns and responsibilities\n- Independent scaling based on different usage patterns\n- Fulfillment system can serve multiple sales channels (web, mobile, B2B)\n- Different teams can own and optimise each system independently\n- Better fault isolation - fulfillment issues don't impact order placement\n- Easier integration with external fulfillment providers\n\n**Negative:**\n- More complex order-to-delivery workflow spanning systems\n- Eventual consistency between order status and fulfillment status\n- Need for sophisticated event handling and error recovery\n- More complex customer experience for order tracking\n\n**Mitigation:**\n- Implement robust event-driven communication patterns\n- Design clear APIs for order status synchronisation\n- Use saga patterns for distributed transaction management\n- Provide unified customer experience through API composition\n",
      "date" : "2025-08-28T00:00:00Z",
      "format" : "Markdown",
      "id" : "7",
      "status" : "Accepted",
      "title" : "Separate E-commerce and Fulfillment Systems"
    }, {
      "content" : "# 8. Integrate with External Service Providers\n\nDate: 2025-08-28\n\n## Status\n\nAccepted\n\n## Context\n\nBuilding all capabilities in-house would require significant development effort and expertise in specialised domains. We have identified several areas where external service providers offer mature, reliable solutions:\n\n- Payment processing with PCI compliance\n- Email delivery with high deliverability rates\n- Shipping and logistics with multiple carriers\n- Tax calculation with regulatory compliance\n- Analytics and business intelligence\n- CRM functionality\n- Product search with advanced algorithms\n\n## Decision\n\nWe will integrate with best-of-breed external service providers for non-core functionality:\n\n**External Systems:**\n- **Payment Provider** - Handle payment processing, fraud detection, PCI compliance\n- **Email Service** - Transactional emails, marketing campaigns, deliverability management\n- **Shipping Provider** - Multi-carrier shipping, rate calculation, tracking\n- **Tax Calculation Service** - Tax compliance, rate calculation, reporting\n- **Analytics Platform** - Business intelligence, data warehousing, reporting\n- **CRM System** - Customer relationship management, sales pipeline\n- **Search Service** - Advanced product search, recommendations, personalisation\n\n**Integration Approach:**\n- API-first integration with well-defined service contracts\n- Event-driven updates for data synchronisation\n- Fallback mechanisms for service unavailability\n\n## Consequences\n\n**Positive:**\n- Faster time-to-market by leveraging existing solutions\n- Access to specialised expertise and advanced features\n- Reduced development and maintenance costs for non-core functionality\n- Better compliance and security for regulated areas (payments, taxes)\n- Automatic updates and improvements from service providers\n\n**Negative:**\n- Vendor dependency and potential lock-in\n- Integration complexity and maintenance overhead\n- Data privacy and security concerns with external data sharing\n- Potential service availability issues outside our control\n- Ongoing subscription costs\n\n**Mitigation:**\n- Implement adapter patterns to minimise vendor lock-in\n- Establish SLAs and monitoring for external service availability\n- Use circuit breakers and fallback mechanisms\n- Regular review of vendor contracts and alternatives\n- Data encryption and privacy controls for external integrations\n",
      "date" : "2025-08-28T00:00:00Z",
      "format" : "Markdown",
      "id" : "8",
      "status" : "Accepted",
      "title" : "Integrate with External Service Providers"
    }, {
      "content" : "# 9. Implement Dedicated Marketing System\n\nDate: 2025-08-28\n\n## Status\n\nAccepted\n\n## Context\n\nCustomer acquisition and retention require sophisticated marketing capabilities:\n\n- Targeted email campaigns based on customer behavior\n- Customer segmentation for personalsed marketing\n- Campaign performance analytics and optimisation\n- Integration with customer data from the e-commerce platform\n- Marketing automation workflows\n\nInitially considered building these features into the main e-commerce system, but identified distinct concerns and scaling patterns for marketing functionality.\n\n## Decision\n\nWe will implement a dedicated Marketing System as a separate bounded context with the following capabilities:\n\n**Core Services:**\n- **Campaign Manager** - Create and manage marketing campaigns\n- **Segmentation Service** - Customer segmentation and targeting\n- **Email Campaign Service** - Marketing email delivery and tracking\n- **Analytics Service** - Marketing performance analysis\n\n**Key Features:**\n- Customer data synchronisation with e-commerce system\n- Automated campaign triggers based on customer behavior\n- A/B testing for campaign optimisation\n- Integration with external analytics providers\n\n## Consequences\n\n**Positive:**\n- Specialised focus on marketing automation and analytics\n- Independent scaling based on campaign volumes\n- Marketing team can work independently without impacting core e-commerce\n- Better integration with marketing-specific tools and analytics\n- Enables advanced features like predictive analytics and ML-driven segmentation\n- Clear data ownership for marketing campaigns and customer insights\n\n**Negative:**\n- Additional system complexity and operational overhead\n- Need for data synchronisation with e-commerce system\n- Potential data consistency issues between systems\n- More complex customer journey tracking across systems\n\n**Mitigation:**\n- Implement real-time event streaming for customer data synchronisation\n- Use eventual consistency patterns with proper conflict resolution\n- Establish clear data governance policies\n- Implement comprehensive customer journey tracking across systems\n- Use API gateways to provide unified customer experience\n",
      "date" : "2025-08-28T00:00:00Z",
      "format" : "Markdown",
      "id" : "9",
      "status" : "Accepted",
      "title" : "Implement Dedicated Marketing System"
    } ]
  },
  "id" : 1,
  "lastModifiedAgent" : "structurizr-ui",
  "lastModifiedDate" : "2025-08-28T14:20:40Z",
  "model" : {
    "people" : [ {
      "description" : "A customer of our e-commerce platform",
      "id" : "1",
      "location" : "Unspecified",
      "name" : "Customer",
      "properties" : {
        "structurizr.dsl.identifier" : "customer"
      },
      "relationships" : [ {
        "description" : "Uses for support requests",
        "destinationId" : "13",
        "id" : "25",
        "sourceId" : "1",
        "tags" : "Relationship"
      }, {
        "description" : "Uses for support requests",
        "destinationId" : "10",
        "id" : "26",
        "linkedRelationshipId" : "25",
        "sourceId" : "1"
      } ],
      "tags" : "Element,Person"
    }, {
      "description" : "Customer service representative handling support tickets",
      "id" : "11",
      "location" : "Unspecified",
      "name" : "Support Agent",
      "properties" : {
        "structurizr.dsl.identifier" : "supportagent"
      },
      "relationships" : [ {
        "description" : "Uses to manage support tickets",
        "destinationId" : "14",
        "id" : "27",
        "sourceId" : "11",
        "tags" : "Relationship"
      }, {
        "description" : "Uses to manage support tickets",
        "destinationId" : "10",
        "id" : "28",
        "linkedRelationshipId" : "27",
        "sourceId" : "11"
      } ],
      "tags" : "Element,Person"
    }, {
      "description" : "Manages support operations and team performance",
      "id" : "12",
      "location" : "Unspecified",
      "name" : "Support Manager",
      "properties" : {
        "structurizr.dsl.identifier" : "supportmanager"
      },
      "relationships" : [ {
        "description" : "Uses to view support analytics",
        "destinationId" : "20",
        "id" : "29",
        "sourceId" : "12",
        "tags" : "Relationship"
      }, {
        "description" : "Uses to view support analytics",
        "destinationId" : "10",
        "id" : "30",
        "linkedRelationshipId" : "29",
        "sourceId" : "12"
      } ],
      "tags" : "Element,Person"
    } ],
    "softwareSystems" : [ {
      "description" : "External email delivery service",
      "documentation" : { },
      "id" : "2",
      "location" : "Unspecified",
      "name" : "Email Service",
      "properties" : {
        "structurizr.dsl.identifier" : "emailservice"
      },
      "tags" : "Element,Software System,External"
    }, {
      "description" : "Core e-commerce functionality",
      "documentation" : { },
      "id" : "3",
      "location" : "Unspecified",
      "name" : "E-commerce Platform",
      "properties" : {
        "structurizr.dsl.identifier" : "ecommercesystem"
      },
      "tags" : "Element,Software System"
    }, {
      "description" : "Order fulfilment system",
      "documentation" : { },
      "id" : "4",
      "location" : "Unspecified",
      "name" : "Fulfilment Platform",
      "properties" : {
        "structurizr.dsl.identifier" : "fulfilmentsystem"
      },
      "tags" : "Element,Software System"
    }, {
      "description" : "Manages campaigns and customer engagement",
      "documentation" : { },
      "id" : "5",
      "location" : "Unspecified",
      "name" : "Marketing Automation",
      "properties" : {
        "structurizr.dsl.identifier" : "marketingsystem"
      },
      "tags" : "Element,Software System"
    }, {
      "description" : "Customer relationship management platform",
      "documentation" : { },
      "id" : "6",
      "location" : "Unspecified",
      "name" : "CRM System",
      "properties" : {
        "structurizr.dsl.identifier" : "crmsystem"
      },
      "tags" : "Element,Software System"
    }, {
      "description" : "Aggregates and analyzes business data",
      "documentation" : { },
      "id" : "7",
      "location" : "Unspecified",
      "name" : "Analytics Platform",
      "properties" : {
        "structurizr.dsl.identifier" : "analyticssystem"
      },
      "tags" : "Element,Software System"
    }, {
      "description" : "Provides personalized product recommendations",
      "documentation" : { },
      "id" : "8",
      "location" : "Unspecified",
      "name" : "Recommendation Engine",
      "properties" : {
        "structurizr.dsl.identifier" : "recommendationengine"
      },
      "tags" : "Element,Software System"
    }, {
      "description" : "Enables product search functionality",
      "documentation" : { },
      "id" : "9",
      "location" : "Unspecified",
      "name" : "Search Service",
      "properties" : {
        "structurizr.dsl.identifier" : "searchservice"
      },
      "tags" : "Element,Software System"
    }, {
      "containers" : [ {
        "description" : "Customer-facing support interface",
        "documentation" : { },
        "id" : "13",
        "name" : "Support Portal",
        "properties" : {
          "structurizr.dsl.identifier" : "supportsystem.supportportal"
        },
        "relationships" : [ {
          "description" : "Makes API calls to",
          "destinationId" : "15",
          "id" : "31",
          "sourceId" : "13",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container",
        "technology" : "React/JavaScript"
      }, {
        "description" : "Support agent interface for managing tickets",
        "documentation" : { },
        "id" : "14",
        "name" : "Agent Dashboard",
        "properties" : {
          "structurizr.dsl.identifier" : "supportsystem.agentdashboard"
        },
        "relationships" : [ {
          "description" : "Makes API calls to",
          "destinationId" : "15",
          "id" : "32",
          "sourceId" : "14",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container",
        "technology" : "React/JavaScript"
      }, {
        "description" : "Entry point for all API requests",
        "documentation" : { },
        "id" : "15",
        "name" : "API Gateway",
        "properties" : {
          "structurizr.dsl.identifier" : "supportsystem.apigateway"
        },
        "relationships" : [ {
          "description" : "Routes requests to",
          "destinationId" : "16",
          "id" : "33",
          "sourceId" : "15",
          "tags" : "Relationship"
        }, {
          "description" : "Routes requests to",
          "destinationId" : "17",
          "id" : "34",
          "sourceId" : "15",
          "tags" : "Relationship"
        }, {
          "description" : "Routes requests to",
          "destinationId" : "18",
          "id" : "35",
          "sourceId" : "15",
          "tags" : "Relationship"
        }, {
          "description" : "Routes requests to",
          "destinationId" : "20",
          "id" : "36",
          "sourceId" : "15",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container",
        "technology" : "Spring Cloud Gateway"
      }, {
        "description" : "Manages support tickets and workflow",
        "documentation" : { },
        "id" : "16",
        "name" : "Ticket Service",
        "properties" : {
          "structurizr.dsl.identifier" : "supportsystem.ticketservice"
        },
        "relationships" : [ {
          "description" : "Reads from and writes to",
          "destinationId" : "21",
          "id" : "37",
          "sourceId" : "16",
          "tags" : "Relationship"
        }, {
          "description" : "Triggers ticket notifications via",
          "destinationId" : "19",
          "id" : "41",
          "sourceId" : "16",
          "tags" : "Relationship"
        }, {
          "description" : "Publishes ticket events to",
          "destinationId" : "24",
          "id" : "46",
          "sourceId" : "16",
          "tags" : "Relationship"
        }, {
          "description" : "Retrieves customer and order data from",
          "destinationId" : "3",
          "id" : "48",
          "sourceId" : "16",
          "tags" : "Relationship"
        }, {
          "description" : "Updates customer support history in",
          "destinationId" : "6",
          "id" : "50",
          "sourceId" : "16",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container",
        "technology" : "Spring Boot/Java"
      }, {
        "description" : "Manages help articles and FAQs",
        "documentation" : { },
        "id" : "17",
        "name" : "Knowledge Base Service",
        "properties" : {
          "structurizr.dsl.identifier" : "supportsystem.knowledgebaseservice"
        },
        "relationships" : [ {
          "description" : "Reads from and writes to",
          "destinationId" : "22",
          "id" : "38",
          "sourceId" : "17",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container",
        "technology" : "Node.js/Express"
      }, {
        "description" : "Handles real-time customer chat",
        "documentation" : { },
        "id" : "18",
        "name" : "Live Chat Service",
        "properties" : {
          "structurizr.dsl.identifier" : "supportsystem.chatservice"
        },
        "relationships" : [ {
          "description" : "Reads from and writes to",
          "destinationId" : "23",
          "id" : "39",
          "sourceId" : "18",
          "tags" : "Relationship"
        }, {
          "description" : "Triggers chat notifications via",
          "destinationId" : "19",
          "id" : "42",
          "sourceId" : "18",
          "tags" : "Relationship"
        }, {
          "description" : "Publishes chat events to",
          "destinationId" : "24",
          "id" : "47",
          "sourceId" : "18",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container",
        "technology" : "Node.js/Socket.io"
      }, {
        "description" : "Sends support-related notifications",
        "documentation" : { },
        "id" : "19",
        "name" : "Notification Service",
        "properties" : {
          "structurizr.dsl.identifier" : "supportsystem.notificationservice"
        },
        "relationships" : [ {
          "description" : "Sends emails via",
          "destinationId" : "2",
          "id" : "43",
          "sourceId" : "19",
          "tags" : "Relationship"
        }, {
          "description" : "Publishes notification events to",
          "destinationId" : "24",
          "id" : "45",
          "sourceId" : "19",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container",
        "technology" : "Python/FastAPI"
      }, {
        "description" : "Generates support analytics and reports",
        "documentation" : { },
        "id" : "20",
        "name" : "Reporting Service",
        "properties" : {
          "structurizr.dsl.identifier" : "supportsystem.reportingservice"
        },
        "relationships" : [ {
          "description" : "Reads analytics data from",
          "destinationId" : "21",
          "id" : "40",
          "sourceId" : "20",
          "tags" : "Relationship"
        }, {
          "description" : "Sends support metrics to",
          "destinationId" : "7",
          "id" : "52",
          "sourceId" : "20",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container",
        "technology" : "Python/FastAPI"
      }, {
        "description" : "Stores support tickets and interactions",
        "documentation" : { },
        "id" : "21",
        "name" : "Ticket Database",
        "properties" : {
          "structurizr.dsl.identifier" : "supportsystem.ticketdatabase"
        },
        "tags" : "Element,Container,Database",
        "technology" : "PostgreSQL"
      }, {
        "description" : "Stores help articles and documentation",
        "documentation" : { },
        "id" : "22",
        "name" : "Knowledge Base Database",
        "properties" : {
          "structurizr.dsl.identifier" : "supportsystem.knowledgebasedatabase"
        },
        "tags" : "Element,Container,Database",
        "technology" : "MongoDB"
      }, {
        "description" : "Stores chat conversations and history",
        "documentation" : { },
        "id" : "23",
        "name" : "Chat Database",
        "properties" : {
          "structurizr.dsl.identifier" : "supportsystem.chatdatabase"
        },
        "tags" : "Element,Container,Database",
        "technology" : "Redis"
      }, {
        "description" : "Handles asynchronous communication",
        "documentation" : { },
        "id" : "24",
        "name" : "Message Queue",
        "properties" : {
          "structurizr.dsl.identifier" : "supportsystem.messagequeue"
        },
        "tags" : "Element,Container",
        "technology" : "Apache Kafka"
      } ],
      "description" : "Handles customer inquiries and support operations",
      "documentation" : { },
      "id" : "10",
      "location" : "Unspecified",
      "name" : "Customer Support Platform",
      "properties" : {
        "structurizr.dsl.identifier" : "supportsystem"
      },
      "relationships" : [ {
        "description" : "Sends emails via",
        "destinationId" : "2",
        "id" : "44",
        "linkedRelationshipId" : "43",
        "sourceId" : "10"
      }, {
        "description" : "Retrieves customer and order data from",
        "destinationId" : "3",
        "id" : "49",
        "linkedRelationshipId" : "48",
        "sourceId" : "10"
      }, {
        "description" : "Updates customer support history in",
        "destinationId" : "6",
        "id" : "51",
        "linkedRelationshipId" : "50",
        "sourceId" : "10"
      }, {
        "description" : "Sends support metrics to",
        "destinationId" : "7",
        "id" : "53",
        "linkedRelationshipId" : "52",
        "sourceId" : "10"
      } ],
      "tags" : "Element,Software System"
    } ]
  },
  "name" : "Retail Business",
  "properties" : {
    "structurizr.dsl" : "d29ya3NwYWNlIGV4dGVuZHMgLi4vbGFuZHNjYXBlLmRzbCB7CiAgICBtb2RlbCB7CiAgICAgICAgIyBEZWZpbmUgc3VwcG9ydCBzeXN0ZW0gcGVvcGxlCiAgICAgICAgc3VwcG9ydEFnZW50ID0gcGVyc29uICJTdXBwb3J0IEFnZW50IiAiQ3VzdG9tZXIgc2VydmljZSByZXByZXNlbnRhdGl2ZSBoYW5kbGluZyBzdXBwb3J0IHRpY2tldHMiCiAgICAgICAgc3VwcG9ydE1hbmFnZXIgPSBwZXJzb24gIlN1cHBvcnQgTWFuYWdlciIgIk1hbmFnZXMgc3VwcG9ydCBvcGVyYXRpb25zIGFuZCB0ZWFtIHBlcmZvcm1hbmNlIgogICAgICAgIAogICAgICAgICMgUmVkZWZpbmUgc3VwcG9ydFN5c3RlbSBhcyB0aGUgaW50ZXJuYWwgc3lzdGVtIChvdmVycmlkZXMgdGhlIGV4dGVybmFsIHN5c3RlbSBkZWZpbml0aW9uKQogICAgICAgICFlbGVtZW50IHN1cHBvcnRTeXN0ZW0gewogICAgICAgICAgICAjIENvbnRhaW5lciBsZXZlbCAtIG1pY3Jvc2VydmljZXMKICAgICAgICAgICAgc3VwcG9ydFBvcnRhbCA9IGNvbnRhaW5lciAiU3VwcG9ydCBQb3J0YWwiICJDdXN0b21lci1mYWNpbmcgc3VwcG9ydCBpbnRlcmZhY2UiICJSZWFjdC9KYXZhU2NyaXB0IgogICAgICAgICAgICBhZ2VudERhc2hib2FyZCA9IGNvbnRhaW5lciAiQWdlbnQgRGFzaGJvYXJkIiAiU3VwcG9ydCBhZ2VudCBpbnRlcmZhY2UgZm9yIG1hbmFnaW5nIHRpY2tldHMiICJSZWFjdC9KYXZhU2NyaXB0IgogICAgICAgICAgICBhcGlHYXRld2F5ID0gY29udGFpbmVyICJBUEkgR2F0ZXdheSIgIkVudHJ5IHBvaW50IGZvciBhbGwgQVBJIHJlcXVlc3RzIiAiU3ByaW5nIENsb3VkIEdhdGV3YXkiCiAgICAgICAgICAgIAogICAgICAgICAgICB0aWNrZXRTZXJ2aWNlID0gY29udGFpbmVyICJUaWNrZXQgU2VydmljZSIgIk1hbmFnZXMgc3VwcG9ydCB0aWNrZXRzIGFuZCB3b3JrZmxvdyIgIlNwcmluZyBCb290L0phdmEiCiAgICAgICAgICAgIGtub3dsZWRnZUJhc2VTZXJ2aWNlID0gY29udGFpbmVyICJLbm93bGVkZ2UgQmFzZSBTZXJ2aWNlIiAiTWFuYWdlcyBoZWxwIGFydGljbGVzIGFuZCBGQVFzIiAiTm9kZS5qcy9FeHByZXNzIgogICAgICAgICAgICBjaGF0U2VydmljZSA9IGNvbnRhaW5lciAiTGl2ZSBDaGF0IFNlcnZpY2UiICJIYW5kbGVzIHJlYWwtdGltZSBjdXN0b21lciBjaGF0IiAiTm9kZS5qcy9Tb2NrZXQuaW8iCiAgICAgICAgICAgIG5vdGlmaWNhdGlvblNlcnZpY2UgPSBjb250YWluZXIgIk5vdGlmaWNhdGlvbiBTZXJ2aWNlIiAiU2VuZHMgc3VwcG9ydC1yZWxhdGVkIG5vdGlmaWNhdGlvbnMiICJQeXRob24vRmFzdEFQSSIKICAgICAgICAgICAgcmVwb3J0aW5nU2VydmljZSA9IGNvbnRhaW5lciAiUmVwb3J0aW5nIFNlcnZpY2UiICJHZW5lcmF0ZXMgc3VwcG9ydCBhbmFseXRpY3MgYW5kIHJlcG9ydHMiICJQeXRob24vRmFzdEFQSSIKICAgICAgICAgICAgCiAgICAgICAgICAgIHRpY2tldERhdGFiYXNlID0gY29udGFpbmVyICJUaWNrZXQgRGF0YWJhc2UiICJTdG9yZXMgc3VwcG9ydCB0aWNrZXRzIGFuZCBpbnRlcmFjdGlvbnMiICJQb3N0Z3JlU1FMIiB7CiAgICAgICAgICAgICAgICB0YWdzICJEYXRhYmFzZSIKICAgICAgICAgICAgfQogICAgICAgICAgICBrbm93bGVkZ2VCYXNlRGF0YWJhc2UgPSBjb250YWluZXIgIktub3dsZWRnZSBCYXNlIERhdGFiYXNlIiAiU3RvcmVzIGhlbHAgYXJ0aWNsZXMgYW5kIGRvY3VtZW50YXRpb24iICJNb25nb0RCIiB7CiAgICAgICAgICAgICAgICB0YWdzICJEYXRhYmFzZSIKICAgICAgICAgICAgfQogICAgICAgICAgICBjaGF0RGF0YWJhc2UgPSBjb250YWluZXIgIkNoYXQgRGF0YWJhc2UiICJTdG9yZXMgY2hhdCBjb252ZXJzYXRpb25zIGFuZCBoaXN0b3J5IiAiUmVkaXMiIHsKICAgICAgICAgICAgICAgIHRhZ3MgIkRhdGFiYXNlIgogICAgICAgICAgICB9CiAgICAgICAgICAgIAogICAgICAgICAgICBtZXNzYWdlUXVldWUgPSBjb250YWluZXIgIk1lc3NhZ2UgUXVldWUiICJIYW5kbGVzIGFzeW5jaHJvbm91cyBjb21tdW5pY2F0aW9uIiAiQXBhY2hlIEthZmthIgogICAgICAgIAogICAgICAgICAgICAjIERlZmluZSByZWxhdGlvbnNoaXBzIGF0IHRoZSBjb250YWluZXIgbGV2ZWwKICAgICAgICAgICAgY3VzdG9tZXIgLT4gc3VwcG9ydFBvcnRhbCAiVXNlcyBmb3Igc3VwcG9ydCByZXF1ZXN0cyIKICAgICAgICAgICAgc3VwcG9ydEFnZW50IC0+IGFnZW50RGFzaGJvYXJkICJVc2VzIHRvIG1hbmFnZSBzdXBwb3J0IHRpY2tldHMiCiAgICAgICAgICAgIHN1cHBvcnRNYW5hZ2VyIC0+IHJlcG9ydGluZ1NlcnZpY2UgIlVzZXMgdG8gdmlldyBzdXBwb3J0IGFuYWx5dGljcyIKICAgICAgICAgICAgCiAgICAgICAgICAgIHN1cHBvcnRQb3J0YWwgLT4gYXBpR2F0ZXdheSAiTWFrZXMgQVBJIGNhbGxzIHRvIgogICAgICAgICAgICBhZ2VudERhc2hib2FyZCAtPiBhcGlHYXRld2F5ICJNYWtlcyBBUEkgY2FsbHMgdG8iCiAgICAgICAgICAgIAogICAgICAgICAgICBhcGlHYXRld2F5IC0+IHRpY2tldFNlcnZpY2UgIlJvdXRlcyByZXF1ZXN0cyB0byIKICAgICAgICAgICAgYXBpR2F0ZXdheSAtPiBrbm93bGVkZ2VCYXNlU2VydmljZSAiUm91dGVzIHJlcXVlc3RzIHRvIgogICAgICAgICAgICBhcGlHYXRld2F5IC0+IGNoYXRTZXJ2aWNlICJSb3V0ZXMgcmVxdWVzdHMgdG8iCiAgICAgICAgICAgIGFwaUdhdGV3YXkgLT4gcmVwb3J0aW5nU2VydmljZSAiUm91dGVzIHJlcXVlc3RzIHRvIgogICAgICAgICAgICAKICAgICAgICAgICAgdGlja2V0U2VydmljZSAtPiB0aWNrZXREYXRhYmFzZSAiUmVhZHMgZnJvbSBhbmQgd3JpdGVzIHRvIgogICAgICAgICAgICBrbm93bGVkZ2VCYXNlU2VydmljZSAtPiBrbm93bGVkZ2VCYXNlRGF0YWJhc2UgIlJlYWRzIGZyb20gYW5kIHdyaXRlcyB0byIKICAgICAgICAgICAgY2hhdFNlcnZpY2UgLT4gY2hhdERhdGFiYXNlICJSZWFkcyBmcm9tIGFuZCB3cml0ZXMgdG8iCiAgICAgICAgICAgIHJlcG9ydGluZ1NlcnZpY2UgLT4gdGlja2V0RGF0YWJhc2UgIlJlYWRzIGFuYWx5dGljcyBkYXRhIGZyb20iCiAgICAgICAgICAgIAogICAgICAgICAgICB0aWNrZXRTZXJ2aWNlIC0+IG5vdGlmaWNhdGlvblNlcnZpY2UgIlRyaWdnZXJzIHRpY2tldCBub3RpZmljYXRpb25zIHZpYSIKICAgICAgICAgICAgY2hhdFNlcnZpY2UgLT4gbm90aWZpY2F0aW9uU2VydmljZSAiVHJpZ2dlcnMgY2hhdCBub3RpZmljYXRpb25zIHZpYSIKICAgICAgICAgICAgbm90aWZpY2F0aW9uU2VydmljZSAtPiBlbWFpbFNlcnZpY2UgIlNlbmRzIGVtYWlscyB2aWEiCiAgICAgICAgICAgIG5vdGlmaWNhdGlvblNlcnZpY2UgLT4gbWVzc2FnZVF1ZXVlICJQdWJsaXNoZXMgbm90aWZpY2F0aW9uIGV2ZW50cyB0byIKICAgICAgICAgICAgCiAgICAgICAgICAgIHRpY2tldFNlcnZpY2UgLT4gbWVzc2FnZVF1ZXVlICJQdWJsaXNoZXMgdGlja2V0IGV2ZW50cyB0byIKICAgICAgICAgICAgY2hhdFNlcnZpY2UgLT4gbWVzc2FnZVF1ZXVlICJQdWJsaXNoZXMgY2hhdCBldmVudHMgdG8iCiAgICAgICAgICAgIAogICAgICAgICAgICAjIEludGVncmF0aW9uIHdpdGggb3RoZXIgc3lzdGVtcwogICAgICAgICAgICB0aWNrZXRTZXJ2aWNlIC0+IGVjb21tZXJjZVN5c3RlbSAiUmV0cmlldmVzIGN1c3RvbWVyIGFuZCBvcmRlciBkYXRhIGZyb20iCiAgICAgICAgICAgIHRpY2tldFNlcnZpY2UgLT4gY3JtU3lzdGVtICJVcGRhdGVzIGN1c3RvbWVyIHN1cHBvcnQgaGlzdG9yeSBpbiIKICAgICAgICAgICAgcmVwb3J0aW5nU2VydmljZSAtPiBhbmFseXRpY3NTeXN0ZW0gIlNlbmRzIHN1cHBvcnQgbWV0cmljcyB0byIKICAgICAgICB9CiAgICB9CgogICAgdmlld3MgewogICAgICAgIHN5c3RlbUNvbnRleHQgc3VwcG9ydFN5c3RlbSAiU3VwcG9ydFN5c3RlbUNvbnRleHQiIHsKICAgICAgICAgICAgaW5jbHVkZSAqCiAgICAgICAgICAgIGF1dG9MYXlvdXQKICAgICAgICAgICAgdGl0bGUgIlN1cHBvcnQgU3lzdGVtIC0gU3lzdGVtIENvbnRleHQiCiAgICAgICAgICAgIGRlc2NyaXB0aW9uICJUaGUgc3lzdGVtIGNvbnRleHQgZGlhZ3JhbSBmb3IgdGhlIEN1c3RvbWVyIFN1cHBvcnQgUGxhdGZvcm0iCiAgICAgICAgfQoKICAgICAgICBjb250YWluZXIgc3VwcG9ydFN5c3RlbSAiU3VwcG9ydENvbnRhaW5lcnMiIHsKICAgICAgICAgICAgaW5jbHVkZSAqCiAgICAgICAgICAgIGF1dG9MYXlvdXQKICAgICAgICAgICAgdGl0bGUgIlN1cHBvcnQgU3lzdGVtIC0gQ29udGFpbmVycyIKICAgICAgICAgICAgZGVzY3JpcHRpb24gIlRoZSBjb250YWluZXIgZGlhZ3JhbSBmb3IgdGhlIEN1c3RvbWVyIFN1cHBvcnQgUGxhdGZvcm0iCiAgICAgICAgfQoKICAgICAgICBzdHlsZXMgewogICAgICAgICAgICBlbGVtZW50ICJQZXJzb24iIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQgI2Y0OTY5NgogICAgICAgICAgICAgICAgY29sb3IgI2ZmZmZmZgogICAgICAgICAgICAgICAgZm9udFNpemUgMjIKICAgICAgICAgICAgICAgIHNoYXBlIFBlcnNvbgogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsZW1lbnQgIlNvZnR3YXJlIFN5c3RlbSIgewogICAgICAgICAgICAgICAgYmFja2dyb3VuZCAjMTE2OGJkCiAgICAgICAgICAgICAgICBjb2xvciAjZmZmZmZmCiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxlbWVudCAiQ29udGFpbmVyIiB7CiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kICM0MzhkZDUKICAgICAgICAgICAgICAgIGNvbG9yICNmZmZmZmYKICAgICAgICAgICAgfQogICAgICAgICAgICBlbGVtZW50ICJEYXRhYmFzZSIgewogICAgICAgICAgICAgICAgc2hhcGUgY3lsaW5kZXIKICAgICAgICAgICAgfQogICAgICAgICAgICBlbGVtZW50ICJFeHRlcm5hbCIgewogICAgICAgICAgICAgICAgYmFja2dyb3VuZCAjYzdjZWQ2CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9Cn0="
  },
  "views" : {
    "configuration" : {
      "branding" : { },
      "lastSavedView" : "SupportContainers",
      "metadataSymbols" : "SquareBrackets",
      "styles" : {
        "elements" : [ {
          "background" : "#f49696",
          "color" : "#ffffff",
          "fontSize" : 22,
          "shape" : "Person",
          "tag" : "Person"
        }, {
          "background" : "#1168bd",
          "color" : "#ffffff",
          "tag" : "Software System"
        }, {
          "background" : "#438dd5",
          "color" : "#ffffff",
          "tag" : "Container"
        }, {
          "shape" : "Cylinder",
          "tag" : "Database"
        }, {
          "background" : "#c7ced6",
          "tag" : "External"
        } ]
      },
      "terminology" : { }
    },
    "containerViews" : [ {
      "automaticLayout" : {
        "applied" : true,
        "edgeSeparation" : 0,
        "implementation" : "Graphviz",
        "nodeSeparation" : 300,
        "rankDirection" : "TopBottom",
        "rankSeparation" : 300,
        "vertices" : false
      },
      "description" : "The container diagram for the Customer Support Platform",
      "dimensions" : {
        "height" : 3991,
        "width" : 5986
      },
      "elements" : [ {
        "id" : "1",
        "x" : 1586,
        "y" : 151
      }, {
        "id" : "2",
        "x" : 3745,
        "y" : 3351
      }, {
        "id" : "3",
        "x" : 3836,
        "y" : 2751
      }, {
        "id" : "6",
        "x" : 4586,
        "y" : 2751
      }, {
        "id" : "7",
        "x" : 5336,
        "y" : 2751
      }, {
        "id" : "11",
        "x" : 2336,
        "y" : 151
      }, {
        "id" : "12",
        "x" : 3745,
        "y" : 1451
      }, {
        "id" : "13",
        "x" : 1561,
        "y" : 851
      }, {
        "id" : "14",
        "x" : 2311,
        "y" : 851
      }, {
        "id" : "15",
        "x" : 1936,
        "y" : 1501
      }, {
        "id" : "16",
        "x" : 2336,
        "y" : 2151
      }, {
        "id" : "17",
        "x" : 528,
        "y" : 2151
      }, {
        "id" : "18",
        "x" : 1541,
        "y" : 2151
      }, {
        "id" : "19",
        "x" : 2028,
        "y" : 2751
      }, {
        "id" : "20",
        "x" : 3086,
        "y" : 2151
      }, {
        "id" : "21",
        "x" : 3086,
        "y" : 2751
      }, {
        "id" : "22",
        "x" : 220,
        "y" : 2751
      }, {
        "id" : "23",
        "x" : 970,
        "y" : 2751
      }, {
        "id" : "24",
        "x" : 2028,
        "y" : 3351
      } ],
      "externalSoftwareSystemBoundariesVisible" : false,
      "key" : "SupportContainers",
      "order" : 2,
      "relationships" : [ {
        "id" : "25"
      }, {
        "id" : "27"
      }, {
        "id" : "29"
      }, {
        "id" : "31"
      }, {
        "id" : "32"
      }, {
        "id" : "33"
      }, {
        "id" : "34"
      }, {
        "id" : "35"
      }, {
        "id" : "36"
      }, {
        "id" : "37"
      }, {
        "id" : "38"
      }, {
        "id" : "39"
      }, {
        "id" : "40"
      }, {
        "id" : "41"
      }, {
        "id" : "42"
      }, {
        "id" : "43"
      }, {
        "id" : "45"
      }, {
        "id" : "46",
        "vertices" : [ {
          "x" : 2628,
          "y" : 2751
        }, {
          "x" : 2628,
          "y" : 3051
        } ]
      }, {
        "id" : "47",
        "vertices" : [ {
          "x" : 1878,
          "y" : 3051
        } ]
      }, {
        "id" : "48",
        "vertices" : [ {
          "x" : 2936,
          "y" : 2451
        }, {
          "x" : 3716,
          "y" : 2751
        } ]
      }, {
        "id" : "50",
        "vertices" : [ {
          "x" : 2936,
          "y" : 2451
        }, {
          "x" : 4436,
          "y" : 2751
        } ]
      }, {
        "id" : "52",
        "vertices" : [ {
          "x" : 5186,
          "y" : 2751
        } ]
      } ],
      "softwareSystemId" : "10",
      "title" : "Support System - Containers"
    } ],
    "systemContextViews" : [ {
      "automaticLayout" : {
        "applied" : true,
        "edgeSeparation" : 0,
        "implementation" : "Graphviz",
        "nodeSeparation" : 300,
        "rankDirection" : "TopBottom",
        "rankSeparation" : 300,
        "vertices" : false
      },
      "description" : "The system context diagram for the Customer Support Platform",
      "dimensions" : {
        "height" : 2000,
        "width" : 3100
      },
      "elements" : [ {
        "id" : "1",
        "x" : 650,
        "y" : 151
      }, {
        "id" : "2",
        "x" : 200,
        "y" : 1451
      }, {
        "id" : "3",
        "x" : 950,
        "y" : 1451
      }, {
        "id" : "6",
        "x" : 1700,
        "y" : 1451
      }, {
        "id" : "7",
        "x" : 2450,
        "y" : 1451
      }, {
        "id" : "10",
        "x" : 1325,
        "y" : 851
      }, {
        "id" : "11",
        "x" : 1350,
        "y" : 151
      }, {
        "id" : "12",
        "x" : 2050,
        "y" : 151
      } ],
      "enterpriseBoundaryVisible" : true,
      "key" : "SupportSystemContext",
      "order" : 1,
      "relationships" : [ {
        "id" : "26"
      }, {
        "id" : "28"
      }, {
        "id" : "30"
      }, {
        "id" : "44"
      }, {
        "id" : "49"
      }, {
        "id" : "51"
      }, {
        "id" : "53"
      } ],
      "softwareSystemId" : "10",
      "title" : "Support System - System Context"
    } ]
  }
}