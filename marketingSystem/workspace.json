{
  "configuration" : { },
  "description" : "Architecture for our online retail business",
  "documentation" : {
    "decisions" : [ {
      "content" : "# 1. Record architecture decisions\n\nDate: 2025-08-28\n\n## Status\n\nAccepted\n\n## Context\n\nWe need to record the architectural decisions made on this project.\n\n## Decision\n\nWe will use Architecture Decision Records, as described by Michael Nygard in this article: [http://thinkrelevance.com/blog/2011/11/15/documenting-architecture-decisions](http://thinkrelevance.com/blog/2011/11/15/documenting-architecture-decisions)\n\n## Consequences\n\nSee Michael Nygard's article, linked above.",
      "date" : "2025-08-28T00:00:00Z",
      "format" : "Markdown",
      "id" : "1",
      "status" : "Accepted",
      "title" : "Record architecture decisions"
    }, {
      "content" : "# 2. Adopt Microservices Architecture\n\nDate: 2025-08-28\n\n## Status\n\nAccepted\n\n## Context\n\nWe need to design a scalable e-commerce platform that can handle multiple domains including core e-commerce functionality, order fulfillment, and marketing automation. The system needs to support:\n\n- High availability and scalability\n- Independent deployment of different business capabilities\n- Different teams working on different parts of the system\n- Technology diversity for optimal solutions per domain\n\n## Decision\n\nWe will adopt a microservices architecture pattern, organizing our system into the following bounded contexts:\n\n1. **E-commerce System** - Core customer-facing functionality\n2. **Fulfillment System** - Order processing and inventory management\n3. **Marketing System** - Campaign management and customer engagement\n4. **Support System** - Customer service and support tools\n\nEach system will be composed of focused microservices with dedicated databases following the database-per-service pattern.\n\n## Consequences\n\n**Positive:**\n- Independent scaling of different business capabilities\n- Technology diversity - teams can choose optimal tech stack per service\n- Fault isolation - issues in one service don't bring down the entire system\n- Independent deployment and release cycles\n- Clear ownership boundaries for different teams\n\n**Negative:**\n- Increased operational complexity\n- Network latency between services\n- Data consistency challenges across services\n- More complex testing and debugging\n- Need for sophisticated monitoring and observability\n\n**Mitigation:**\n- Implement comprehensive monitoring and logging\n- Use message queues for asynchronous communication\n- Establish clear service contracts and API versioning\n- Invest in CI/CD pipeline automation\n",
      "date" : "2025-08-28T00:00:00Z",
      "format" : "Markdown",
      "id" : "2",
      "status" : "Accepted",
      "title" : "Adopt Microservices Architecture"
    }, {
      "content" : "# 3. Use Polyglot Persistence Strategy\n\nDate: 2025-08-28\n\n## Status\n\nAccepted\n\n## Context\n\nDifferent parts of our e-commerce platform have varying data requirements:\n\n- User accounts need ACID transactions and relational integrity\n- Product catalogs benefit from flexible schema and fast reads\n- Order data requires strong consistency and auditability\n- Marketing analytics need fast aggregations and flexible querying\n- Inventory tracking requires real-time updates and consistency\n\nA single database technology cannot optimally serve all these diverse needs.\n\n## Decision\n\nWe will implement a polyglot persistence strategy using different database technologies optimised for specific use cases:\n\n- **PostgreSQL** for transactional data (users, orders, campaigns, analytics)\n- **MongoDB** for flexible schema data (product catalogs, customer segments, inventory)\n- **MySQL** for warehouse operations data (established team expertise)\n\nEach microservice will own its data and database, following the database-per-service pattern.\n\n## Consequences\n\n**Positive:**\n- Optimal performance for each data access pattern\n- Services can evolve their data models independently\n- Technology choice matches team expertise and use case requirements\n- Better scalability through specialised database optimisations\n\n**Negative:**\n- Increased operational complexity managing multiple database technologies\n- Cross-service queries become more complex\n- Need for multiple database administration skills\n- Data consistency challenges across different database systems\n- Backup and disaster recovery complexity\n\n**Mitigation:**\n- Implement robust monitoring for all database technologies\n- Use event-driven architecture for data synchronisation\n- Establish clear data ownership boundaries\n- Invest in database administration training and tooling\n",
      "date" : "2025-08-28T00:00:00Z",
      "format" : "Markdown",
      "id" : "3",
      "status" : "Accepted",
      "title" : "Use Polyglot Persistence Strategy"
    }, {
      "content" : "# 4. Implement Event-Driven Architecture with Message Queues\n\nDate: 2025-08-28\n\n## Status\n\nAccepted\n\n## Context\n\nOur microservices architecture requires reliable communication between services. We need to handle:\n\n- Order processing workflows that span multiple services\n- Real-time inventory updates across fulfillment and e-commerce systems\n- Marketing campaign triggers based on customer behavior\n- Asynchronous notifications and email sending\n- Decoupling of services to prevent cascading failures\n\nSynchronous API calls alone would create tight coupling and potential cascade failures.\n\n## Decision\n\nWe will implement event-driven architecture using message queues for asynchronous communication:\n\n- **Apache Kafka** for high-throughput event streaming (e-commerce and marketing systems)\n- **RabbitMQ** for reliable message delivery (fulfillment system)\n\nServices will publish domain events (order placed, payment processed, inventory updated) and subscribe to relevant events from other services.\n\n## Consequences\n\n**Positive:**\n- Loose coupling between services\n- Better resilience - services can handle temporary unavailability of dependencies\n- Scalability - async processing allows for better resource utilisation\n- Audit trail - events provide natural business process logging\n- Flexibility - new services can easily subscribe to existing events\n\n**Negative:**\n- Eventual consistency - data may be temporarily inconsistent across services\n- Complexity in handling message ordering and duplicate processing\n- Debugging distributed workflows becomes more challenging\n- Need for sophisticated monitoring of message queues\n- Potential message loss scenarios need handling\n\n**Mitigation:**\n- Implement idempotent message handlers\n- Use message deduplication strategies\n- Establish clear event schemas and versioning\n- Implement comprehensive monitoring and alerting\n- Design for graceful degradation when message queues are unavailable\n",
      "date" : "2025-08-28T00:00:00Z",
      "format" : "Markdown",
      "id" : "4",
      "status" : "Accepted",
      "title" : "Implement Event-Driven Architecture with Message Queues"
    }, {
      "content" : "# 5. Use API Gateway Pattern\n\nDate: 2025-08-28\n\n## Status\n\nAccepted\n\n## Context\n\nWith multiple microservices, we face challenges with:\n\n- Client applications needing to know about multiple service endpoints\n- Cross-cutting concerns like authentication, rate limiting, and logging\n- Different API versions and protocols across services\n- Security policies and access control\n- Load balancing and service discovery\n\nDirect client-to-service communication would create tight coupling and duplicate cross-cutting functionality.\n\n## Decision\n\nWe will implement the API Gateway pattern using Spring Cloud Gateway for both e-commerce and marketing systems:\n\n- Single entry point for all client API requests\n- Handle cross-cutting concerns (authentication, rate limiting, CORS)\n- Route requests to appropriate microservices\n- API composition and protocol translation\n- Request/response transformation and validation\n\n## Consequences\n\n**Positive:**\n- Simplified client development - single endpoint to manage\n- Centralised handling of cross-cutting concerns\n- Better security through single controlled entry point\n- Easier API versioning and backward compatibility\n- Load balancing and failover capabilities\n- Centralised logging and monitoring of API calls\n\n**Negative:**\n- Potential single point of failure\n- Additional network hop adds latency\n- Gateway becomes a bottleneck if not properly scaled\n- Complexity in managing routing rules\n- Risk of creating a distributed monolith if gateway becomes too intelligent\n\n**Mitigation:**\n- Implement high availability for API gateways\n- Keep gateway logic lightweight - focus on routing and cross-cutting concerns\n- Use circuit breakers to handle downstream service failures\n- Implement proper caching strategies\n- Monitor gateway performance and scale horizontally as needed\n",
      "date" : "2025-08-28T00:00:00Z",
      "format" : "Markdown",
      "id" : "5",
      "status" : "Accepted",
      "title" : "Use API Gateway Pattern"
    }, {
      "content" : "# 6. Adopt Technology Diversity Strategy\n\nDate: 2025-08-28\n\n## Status\n\nAccepted\n\n## Context\n\nDifferent services in our platform have varying requirements and our development teams have different expertise:\n\n- Some services require high-performance concurrent processing\n- Others need rapid development and flexibility\n- Team expertise spans Java, Node.js, Python, and Go\n- Different domains may benefit from specialised frameworks and libraries\n- We want to leverage the best tools for each specific use case\n\n## Decision\n\nWe will adopt a controlled technology diversity approach with the following technology stack:\n\n**Backend Services:**\n- **Spring Boot/Java** - User Service, Order Management (enterprise-grade, strong consistency)\n- **Node.js/Express** - Catalog Service, Inventory Service, Email Campaigns (rapid development, JSON handling)\n- **Python/FastAPI** - Payment Service, Analytics Services (data processing, ML libraries)\n- **Go** - Shipping Service (high-performance, concurrent processing)\n\n**Frontend:**\n- **React/JavaScript** - Web Application and Admin Panel (team expertise, component reusability)\n\n**Infrastructure:**\n- **Spring Cloud Gateway** - API Gateways (Java ecosystem integration)\n\n## Consequences\n\n**Positive:**\n- Optimal technology choice for each service's requirements\n- Leverages existing team expertise effectively\n- Allows teams to use best-in-class libraries and frameworks\n- Enables hiring specialists in different technologies\n- Services can evolve independently with their optimal tech stack\n\n**Negative:**\n- Increased operational complexity with multiple runtimes\n- Need for diverse skillsets in the team\n- Different deployment and monitoring approaches\n- Potential knowledge silos\n- More complex CI/CD pipeline setup\n\n**Mitigation:**\n- Establish common patterns for logging, monitoring, and health checks\n- Use containerisation (Docker) to standardise deployment\n- Create shared libraries and templates for common functionality\n- Implement cross-training programs for critical services\n- Maintain clear documentation and architectural guidelines\n",
      "date" : "2025-08-28T00:00:00Z",
      "format" : "Markdown",
      "id" : "6",
      "status" : "Accepted",
      "title" : "Adopt Technology Diversity Strategy"
    }, {
      "content" : "# 7. Separate E-commerce and Fulfillment Systems\n\nDate: 2025-08-28\n\n## Status\n\nAccepted\n\n## Context\n\nTraditional e-commerce architectures often tightly couple order management with fulfillment processes. However, we have identified distinct concerns:\n\n**E-commerce System Concerns:**\n- Customer experience and order capture\n- Product catalog management\n- Payment processing\n- User account management\n\n**Fulfillment System Concerns:**\n- Inventory management and reservations\n- Warehouse operations (picking, packing)\n- Shipping carrier integration\n- Order tracking and notifications\n\nThese domains have different scaling patterns, business rules, and operational requirements.\n\n## Decision\n\nWe will implement separate E-commerce and Fulfillment systems as distinct bounded contexts:\n\n**E-commerce System** will handle:\n- Customer-facing web application\n- Product catalog and search\n- Order placement and payment processing\n- Customer account management\n\n**Fulfillment System** will handle:\n- Order management and validation\n- Inventory tracking and reservations\n- Warehouse operations coordination\n- Shipping and delivery management\n\nCommunication between systems will be event-driven, with the E-commerce system publishing order events that the Fulfillment system consumes.\n\n## Consequences\n\n**Positive:**\n- Clear separation of business concerns and responsibilities\n- Independent scaling based on different usage patterns\n- Fulfillment system can serve multiple sales channels (web, mobile, B2B)\n- Different teams can own and optimise each system independently\n- Better fault isolation - fulfillment issues don't impact order placement\n- Easier integration with external fulfillment providers\n\n**Negative:**\n- More complex order-to-delivery workflow spanning systems\n- Eventual consistency between order status and fulfillment status\n- Need for sophisticated event handling and error recovery\n- More complex customer experience for order tracking\n\n**Mitigation:**\n- Implement robust event-driven communication patterns\n- Design clear APIs for order status synchronisation\n- Use saga patterns for distributed transaction management\n- Provide unified customer experience through API composition\n",
      "date" : "2025-08-28T00:00:00Z",
      "format" : "Markdown",
      "id" : "7",
      "status" : "Accepted",
      "title" : "Separate E-commerce and Fulfillment Systems"
    }, {
      "content" : "# 8. Integrate with External Service Providers\n\nDate: 2025-08-28\n\n## Status\n\nAccepted\n\n## Context\n\nBuilding all capabilities in-house would require significant development effort and expertise in specialised domains. We have identified several areas where external service providers offer mature, reliable solutions:\n\n- Payment processing with PCI compliance\n- Email delivery with high deliverability rates\n- Shipping and logistics with multiple carriers\n- Tax calculation with regulatory compliance\n- Analytics and business intelligence\n- CRM functionality\n- Product search with advanced algorithms\n\n## Decision\n\nWe will integrate with best-of-breed external service providers for non-core functionality:\n\n**External Systems:**\n- **Payment Provider** - Handle payment processing, fraud detection, PCI compliance\n- **Email Service** - Transactional emails, marketing campaigns, deliverability management\n- **Shipping Provider** - Multi-carrier shipping, rate calculation, tracking\n- **Tax Calculation Service** - Tax compliance, rate calculation, reporting\n- **Analytics Platform** - Business intelligence, data warehousing, reporting\n- **CRM System** - Customer relationship management, sales pipeline\n- **Search Service** - Advanced product search, recommendations, personalisation\n\n**Integration Approach:**\n- API-first integration with well-defined service contracts\n- Event-driven updates for data synchronisation\n- Fallback mechanisms for service unavailability\n\n## Consequences\n\n**Positive:**\n- Faster time-to-market by leveraging existing solutions\n- Access to specialised expertise and advanced features\n- Reduced development and maintenance costs for non-core functionality\n- Better compliance and security for regulated areas (payments, taxes)\n- Automatic updates and improvements from service providers\n\n**Negative:**\n- Vendor dependency and potential lock-in\n- Integration complexity and maintenance overhead\n- Data privacy and security concerns with external data sharing\n- Potential service availability issues outside our control\n- Ongoing subscription costs\n\n**Mitigation:**\n- Implement adapter patterns to minimise vendor lock-in\n- Establish SLAs and monitoring for external service availability\n- Use circuit breakers and fallback mechanisms\n- Regular review of vendor contracts and alternatives\n- Data encryption and privacy controls for external integrations\n",
      "date" : "2025-08-28T00:00:00Z",
      "format" : "Markdown",
      "id" : "8",
      "status" : "Accepted",
      "title" : "Integrate with External Service Providers"
    }, {
      "content" : "# 9. Implement Dedicated Marketing System\n\nDate: 2025-08-28\n\n## Status\n\nAccepted\n\n## Context\n\nCustomer acquisition and retention require sophisticated marketing capabilities:\n\n- Targeted email campaigns based on customer behavior\n- Customer segmentation for personalsed marketing\n- Campaign performance analytics and optimisation\n- Integration with customer data from the e-commerce platform\n- Marketing automation workflows\n\nInitially considered building these features into the main e-commerce system, but identified distinct concerns and scaling patterns for marketing functionality.\n\n## Decision\n\nWe will implement a dedicated Marketing System as a separate bounded context with the following capabilities:\n\n**Core Services:**\n- **Campaign Manager** - Create and manage marketing campaigns\n- **Segmentation Service** - Customer segmentation and targeting\n- **Email Campaign Service** - Marketing email delivery and tracking\n- **Analytics Service** - Marketing performance analysis\n\n**Key Features:**\n- Customer data synchronisation with e-commerce system\n- Automated campaign triggers based on customer behavior\n- A/B testing for campaign optimisation\n- Integration with external analytics providers\n\n## Consequences\n\n**Positive:**\n- Specialised focus on marketing automation and analytics\n- Independent scaling based on campaign volumes\n- Marketing team can work independently without impacting core e-commerce\n- Better integration with marketing-specific tools and analytics\n- Enables advanced features like predictive analytics and ML-driven segmentation\n- Clear data ownership for marketing campaigns and customer insights\n\n**Negative:**\n- Additional system complexity and operational overhead\n- Need for data synchronisation with e-commerce system\n- Potential data consistency issues between systems\n- More complex customer journey tracking across systems\n\n**Mitigation:**\n- Implement real-time event streaming for customer data synchronisation\n- Use eventual consistency patterns with proper conflict resolution\n- Establish clear data governance policies\n- Implement comprehensive customer journey tracking across systems\n- Use API gateways to provide unified customer experience\n",
      "date" : "2025-08-28T00:00:00Z",
      "format" : "Markdown",
      "id" : "9",
      "status" : "Accepted",
      "title" : "Implement Dedicated Marketing System"
    } ]
  },
  "id" : 1,
  "lastModifiedAgent" : "structurizr-ui",
  "lastModifiedDate" : "2025-08-28T14:12:13Z",
  "model" : {
    "people" : [ {
      "description" : "A customer of our e-commerce platform",
      "id" : "1",
      "location" : "Unspecified",
      "name" : "Customer",
      "properties" : {
        "structurizr.dsl.identifier" : "customer"
      },
      "tags" : "Element,Person"
    }, {
      "description" : "Marketing team member managing campaigns",
      "id" : "10",
      "location" : "Unspecified",
      "name" : "Marketer",
      "properties" : {
        "structurizr.dsl.identifier" : "marketer"
      },
      "relationships" : [ {
        "description" : "Manages campaigns with",
        "destinationId" : "5",
        "id" : "22",
        "sourceId" : "10",
        "tags" : "Relationship"
      }, {
        "description" : "Uses",
        "destinationId" : "13",
        "id" : "27",
        "sourceId" : "10",
        "tags" : "Relationship"
      } ],
      "tags" : "Element,Person"
    }, {
      "description" : "Analyzes marketing data and performance",
      "id" : "11",
      "location" : "Unspecified",
      "name" : "Analyst",
      "properties" : {
        "structurizr.dsl.identifier" : "analyst"
      },
      "relationships" : [ {
        "description" : "Analyzes data with",
        "destinationId" : "5",
        "id" : "23",
        "sourceId" : "11",
        "tags" : "Relationship"
      }, {
        "description" : "Uses",
        "destinationId" : "16",
        "id" : "28",
        "sourceId" : "11",
        "tags" : "Relationship"
      } ],
      "tags" : "Element,Person"
    } ],
    "softwareSystems" : [ {
      "description" : "External email delivery service",
      "documentation" : { },
      "id" : "2",
      "location" : "Unspecified",
      "name" : "Email Service",
      "properties" : {
        "structurizr.dsl.identifier" : "emailservice"
      },
      "tags" : "Element,Software System,External"
    }, {
      "description" : "Core e-commerce functionality",
      "documentation" : { },
      "id" : "3",
      "location" : "Unspecified",
      "name" : "E-commerce Platform",
      "properties" : {
        "structurizr.dsl.identifier" : "ecommercesystem"
      },
      "tags" : "Element,Software System"
    }, {
      "description" : "Order fulfilment system",
      "documentation" : { },
      "id" : "4",
      "location" : "Unspecified",
      "name" : "Fulfilment Platform",
      "properties" : {
        "structurizr.dsl.identifier" : "fulfilmentsystem"
      },
      "tags" : "Element,Software System"
    }, {
      "containers" : [ {
        "description" : "Manages marketing campaigns and promotions",
        "documentation" : { },
        "id" : "13",
        "name" : "Campaign Manager",
        "properties" : {
          "structurizr.dsl.identifier" : "marketingsystem.campaignmanager"
        },
        "relationships" : [ {
          "description" : "Makes API calls to",
          "destinationId" : "17",
          "id" : "29",
          "sourceId" : "13",
          "tags" : "Relationship"
        }, {
          "description" : "Reads from and writes to",
          "destinationId" : "18",
          "id" : "37",
          "sourceId" : "13",
          "tags" : "Relationship"
        }, {
          "description" : "Gets customer segments from",
          "destinationId" : "14",
          "id" : "40",
          "sourceId" : "13",
          "tags" : "Relationship"
        }, {
          "description" : "Schedules email campaigns via",
          "destinationId" : "15",
          "id" : "41",
          "sourceId" : "13",
          "tags" : "Relationship"
        }, {
          "description" : "Publishes events to",
          "destinationId" : "21",
          "id" : "45",
          "sourceId" : "13",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container",
        "technology" : "Spring Boot/Java"
      }, {
        "description" : "Segments customers for targeted marketing",
        "documentation" : { },
        "id" : "14",
        "name" : "Segmentation Service",
        "properties" : {
          "structurizr.dsl.identifier" : "marketingsystem.segmentationservice"
        },
        "relationships" : [ {
          "description" : "Makes API calls to",
          "destinationId" : "17",
          "id" : "30",
          "sourceId" : "14",
          "tags" : "Relationship"
        }, {
          "description" : "Reads from and writes to",
          "destinationId" : "19",
          "id" : "38",
          "sourceId" : "14",
          "tags" : "Relationship"
        }, {
          "description" : "Publishes events to",
          "destinationId" : "21",
          "id" : "46",
          "sourceId" : "14",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container",
        "technology" : "Python/FastAPI"
      }, {
        "description" : "Schedules and sends marketing emails",
        "documentation" : { },
        "id" : "15",
        "name" : "Email Campaign Service",
        "properties" : {
          "structurizr.dsl.identifier" : "marketingsystem.emailcampaignservice"
        },
        "relationships" : [ {
          "description" : "Makes API calls to",
          "destinationId" : "17",
          "id" : "31",
          "sourceId" : "15",
          "tags" : "Relationship"
        }, {
          "description" : "Sends emails via",
          "destinationId" : "2",
          "id" : "42",
          "sourceId" : "15",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container",
        "technology" : "Node.js/Express"
      }, {
        "description" : "Collects and analyzes marketing data",
        "documentation" : { },
        "id" : "16",
        "name" : "Analytics Service",
        "properties" : {
          "structurizr.dsl.identifier" : "marketingsystem.analyticsservice"
        },
        "relationships" : [ {
          "description" : "Makes API calls to",
          "destinationId" : "17",
          "id" : "32",
          "sourceId" : "16",
          "tags" : "Relationship"
        }, {
          "description" : "Reads from and writes to",
          "destinationId" : "20",
          "id" : "39",
          "sourceId" : "16",
          "tags" : "Relationship"
        }, {
          "description" : "Sends tracking data to",
          "destinationId" : "12",
          "id" : "43",
          "sourceId" : "16",
          "tags" : "Relationship"
        }, {
          "description" : "Publishes events to",
          "destinationId" : "21",
          "id" : "44",
          "sourceId" : "16",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container",
        "technology" : "Python/FastAPI"
      }, {
        "description" : "Entry point for all API requests",
        "documentation" : { },
        "id" : "17",
        "name" : "API Gateway",
        "properties" : {
          "structurizr.dsl.identifier" : "marketingsystem.apigateway"
        },
        "relationships" : [ {
          "description" : "Routes requests to",
          "destinationId" : "13",
          "id" : "33",
          "sourceId" : "17",
          "tags" : "Relationship"
        }, {
          "description" : "Routes requests to",
          "destinationId" : "14",
          "id" : "34",
          "sourceId" : "17",
          "tags" : "Relationship"
        }, {
          "description" : "Routes requests to",
          "destinationId" : "15",
          "id" : "35",
          "sourceId" : "17",
          "tags" : "Relationship"
        }, {
          "description" : "Routes requests to",
          "destinationId" : "16",
          "id" : "36",
          "sourceId" : "17",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container",
        "technology" : "Spring Cloud Gateway"
      }, {
        "description" : "Stores campaign and promotion data",
        "documentation" : { },
        "id" : "18",
        "name" : "Campaign Database",
        "properties" : {
          "structurizr.dsl.identifier" : "marketingsystem.campaigndatabase"
        },
        "tags" : "Element,Container,Database",
        "technology" : "PostgreSQL"
      }, {
        "description" : "Stores customer segments",
        "documentation" : { },
        "id" : "19",
        "name" : "Segmentation Database",
        "properties" : {
          "structurizr.dsl.identifier" : "marketingsystem.segmentationdatabase"
        },
        "tags" : "Element,Container,Database",
        "technology" : "MongoDB"
      }, {
        "description" : "Stores marketing analytics data",
        "documentation" : { },
        "id" : "20",
        "name" : "Analytics Database",
        "properties" : {
          "structurizr.dsl.identifier" : "marketingsystem.analyticsdatabase"
        },
        "tags" : "Element,Container,Database",
        "technology" : "PostgreSQL"
      }, {
        "description" : "Handles asynchronous communication",
        "documentation" : { },
        "id" : "21",
        "name" : "Message Queue",
        "properties" : {
          "structurizr.dsl.identifier" : "marketingsystem.messagequeue"
        },
        "tags" : "Element,Container",
        "technology" : "Apache Kafka"
      } ],
      "description" : "Manages campaigns and customer engagement",
      "documentation" : { },
      "id" : "5",
      "location" : "Unspecified",
      "name" : "Marketing Automation",
      "properties" : {
        "structurizr.dsl.identifier" : "marketingsystem"
      },
      "relationships" : [ {
        "description" : "Syncs customer and order data with",
        "destinationId" : "3",
        "id" : "24",
        "sourceId" : "5",
        "tags" : "Relationship"
      }, {
        "description" : "Sends marketing emails via",
        "destinationId" : "2",
        "id" : "25",
        "sourceId" : "5",
        "tags" : "Relationship"
      }, {
        "description" : "Sends tracking data to",
        "destinationId" : "12",
        "id" : "26",
        "sourceId" : "5",
        "tags" : "Relationship"
      }, {
        "description" : "Imports customer and order data from",
        "destinationId" : "3",
        "id" : "47",
        "sourceId" : "5",
        "tags" : "Relationship"
      } ],
      "tags" : "Element,Software System"
    }, {
      "description" : "Customer relationship management platform",
      "documentation" : { },
      "id" : "6",
      "location" : "Unspecified",
      "name" : "CRM System",
      "properties" : {
        "structurizr.dsl.identifier" : "crmsystem"
      },
      "tags" : "Element,Software System"
    }, {
      "description" : "Aggregates and analyzes business data",
      "documentation" : { },
      "id" : "7",
      "location" : "Unspecified",
      "name" : "Analytics Platform",
      "properties" : {
        "structurizr.dsl.identifier" : "analyticssystem"
      },
      "tags" : "Element,Software System"
    }, {
      "description" : "Provides personalized product recommendations",
      "documentation" : { },
      "id" : "8",
      "location" : "Unspecified",
      "name" : "Recommendation Engine",
      "properties" : {
        "structurizr.dsl.identifier" : "recommendationengine"
      },
      "tags" : "Element,Software System"
    }, {
      "description" : "Enables product search functionality",
      "documentation" : { },
      "id" : "9",
      "location" : "Unspecified",
      "name" : "Search Service",
      "properties" : {
        "structurizr.dsl.identifier" : "searchservice"
      },
      "tags" : "Element,Software System"
    }, {
      "description" : "External analytics and tracking",
      "documentation" : { },
      "id" : "12",
      "location" : "Unspecified",
      "name" : "Analytics Provider",
      "properties" : {
        "structurizr.dsl.identifier" : "analyticsprovider"
      },
      "tags" : "Element,Software System,External"
    } ]
  },
  "name" : "Retail Business",
  "properties" : {
    "structurizr.dsl" : "d29ya3NwYWNlIGV4dGVuZHMgLi4vbGFuZHNjYXBlLmRzbCB7CiAgICBtb2RlbCB7CiAgICAgICAgIyBEZWZpbmUgcGVvcGxlIGFuZCBleHRlcm5hbCBzeXN0ZW1zCiAgICAgICAgbWFya2V0ZXIgPSBwZXJzb24gIk1hcmtldGVyIiAiTWFya2V0aW5nIHRlYW0gbWVtYmVyIG1hbmFnaW5nIGNhbXBhaWducyIKICAgICAgICBhbmFseXN0ID0gcGVyc29uICJBbmFseXN0IiAiQW5hbHl6ZXMgbWFya2V0aW5nIGRhdGEgYW5kIHBlcmZvcm1hbmNlIgogICAgICAgIGFuYWx5dGljc1Byb3ZpZGVyID0gc29mdHdhcmVTeXN0ZW0gIkFuYWx5dGljcyBQcm92aWRlciIgIkV4dGVybmFsIGFuYWx5dGljcyBhbmQgdHJhY2tpbmciIHsKICAgICAgICAgICAgdGFncyAiRXh0ZXJuYWwiCiAgICAgICAgfQogICAgICAgIAogICAgICAgICFlbGVtZW50IG1hcmtldGluZ1N5c3RlbSB7CiAgICAgICAgICAgICMgQ29udGFpbmVyIGxldmVsIC0gbWljcm9zZXJ2aWNlcwogICAgICAgICAgICBjYW1wYWlnbk1hbmFnZXIgPSBjb250YWluZXIgIkNhbXBhaWduIE1hbmFnZXIiICJNYW5hZ2VzIG1hcmtldGluZyBjYW1wYWlnbnMgYW5kIHByb21vdGlvbnMiICJTcHJpbmcgQm9vdC9KYXZhIgogICAgICAgICAgICBzZWdtZW50YXRpb25TZXJ2aWNlID0gY29udGFpbmVyICJTZWdtZW50YXRpb24gU2VydmljZSIgIlNlZ21lbnRzIGN1c3RvbWVycyBmb3IgdGFyZ2V0ZWQgbWFya2V0aW5nIiAiUHl0aG9uL0Zhc3RBUEkiCiAgICAgICAgICAgIGVtYWlsQ2FtcGFpZ25TZXJ2aWNlID0gY29udGFpbmVyICJFbWFpbCBDYW1wYWlnbiBTZXJ2aWNlIiAiU2NoZWR1bGVzIGFuZCBzZW5kcyBtYXJrZXRpbmcgZW1haWxzIiAiTm9kZS5qcy9FeHByZXNzIgogICAgICAgICAgICBhbmFseXRpY3NTZXJ2aWNlID0gY29udGFpbmVyICJBbmFseXRpY3MgU2VydmljZSIgIkNvbGxlY3RzIGFuZCBhbmFseXplcyBtYXJrZXRpbmcgZGF0YSIgIlB5dGhvbi9GYXN0QVBJIgogICAgICAgICAgICBhcGlHYXRld2F5ID0gY29udGFpbmVyICJBUEkgR2F0ZXdheSIgIkVudHJ5IHBvaW50IGZvciBhbGwgQVBJIHJlcXVlc3RzIiAiU3ByaW5nIENsb3VkIEdhdGV3YXkiCiAgICAgICAgCiAgICAgICAgICAgIGNhbXBhaWduRGF0YWJhc2UgPSBjb250YWluZXIgIkNhbXBhaWduIERhdGFiYXNlIiAiU3RvcmVzIGNhbXBhaWduIGFuZCBwcm9tb3Rpb24gZGF0YSIgIlBvc3RncmVTUUwiIHsKICAgICAgICAgICAgICAgIHRhZ3MgIkRhdGFiYXNlIgogICAgICAgICAgICB9CiAgICAgICAgICAgIHNlZ21lbnRhdGlvbkRhdGFiYXNlID0gY29udGFpbmVyICJTZWdtZW50YXRpb24gRGF0YWJhc2UiICJTdG9yZXMgY3VzdG9tZXIgc2VnbWVudHMiICJNb25nb0RCIiB7CiAgICAgICAgICAgICAgICB0YWdzICJEYXRhYmFzZSIKICAgICAgICAgICAgfQogICAgICAgICAgICBhbmFseXRpY3NEYXRhYmFzZSA9IGNvbnRhaW5lciAiQW5hbHl0aWNzIERhdGFiYXNlIiAiU3RvcmVzIG1hcmtldGluZyBhbmFseXRpY3MgZGF0YSIgIlBvc3RncmVTUUwiIHsKICAgICAgICAgICAgICAgIHRhZ3MgIkRhdGFiYXNlIgogICAgICAgICAgICB9CiAgICAgICAgCiAgICAgICAgICAgIG1lc3NhZ2VRdWV1ZSA9IGNvbnRhaW5lciAiTWVzc2FnZSBRdWV1ZSIgIkhhbmRsZXMgYXN5bmNocm9ub3VzIGNvbW11bmljYXRpb24iICJBcGFjaGUgS2Fma2EiCiAgICAgICAgCiAgICAgICAgICAgICMgRGVmaW5lIHJlbGF0aW9uc2hpcHMgYXQgdGhlIHN5c3RlbSBsZXZlbAogICAgICAgICAgICBtYXJrZXRlciAtPiBtYXJrZXRpbmdTeXN0ZW0gIk1hbmFnZXMgY2FtcGFpZ25zIHdpdGgiCiAgICAgICAgICAgIGFuYWx5c3QgLT4gbWFya2V0aW5nU3lzdGVtICJBbmFseXplcyBkYXRhIHdpdGgiCiAgICAgICAgICAgIG1hcmtldGluZ1N5c3RlbSAtPiBlY29tbWVyY2VTeXN0ZW0gIlN5bmNzIGN1c3RvbWVyIGFuZCBvcmRlciBkYXRhIHdpdGgiCiAgICAgICAgICAgIG1hcmtldGluZ1N5c3RlbSAtPiBlbWFpbFNlcnZpY2UgIlNlbmRzIG1hcmtldGluZyBlbWFpbHMgdmlhIgogICAgICAgICAgICBtYXJrZXRpbmdTeXN0ZW0gLT4gYW5hbHl0aWNzUHJvdmlkZXIgIlNlbmRzIHRyYWNraW5nIGRhdGEgdG8iCiAgICAgICAgCiAgICAgICAgICAgICMgRGVmaW5lIHJlbGF0aW9uc2hpcHMgYXQgdGhlIGNvbnRhaW5lciBsZXZlbAogICAgICAgICAgICBtYXJrZXRlciAtPiBjYW1wYWlnbk1hbmFnZXIgIlVzZXMiCiAgICAgICAgICAgIGFuYWx5c3QgLT4gYW5hbHl0aWNzU2VydmljZSAiVXNlcyIKICAgICAgICAKICAgICAgICAgICAgY2FtcGFpZ25NYW5hZ2VyIC0+IGFwaUdhdGV3YXkgIk1ha2VzIEFQSSBjYWxscyB0byIKICAgICAgICAgICAgc2VnbWVudGF0aW9uU2VydmljZSAtPiBhcGlHYXRld2F5ICJNYWtlcyBBUEkgY2FsbHMgdG8iCiAgICAgICAgICAgIGVtYWlsQ2FtcGFpZ25TZXJ2aWNlIC0+IGFwaUdhdGV3YXkgIk1ha2VzIEFQSSBjYWxscyB0byIKICAgICAgICAgICAgYW5hbHl0aWNzU2VydmljZSAtPiBhcGlHYXRld2F5ICJNYWtlcyBBUEkgY2FsbHMgdG8iCiAgICAgICAgCiAgICAgICAgICAgIGFwaUdhdGV3YXkgLT4gY2FtcGFpZ25NYW5hZ2VyICJSb3V0ZXMgcmVxdWVzdHMgdG8iCiAgICAgICAgICAgIGFwaUdhdGV3YXkgLT4gc2VnbWVudGF0aW9uU2VydmljZSAiUm91dGVzIHJlcXVlc3RzIHRvIgogICAgICAgICAgICBhcGlHYXRld2F5IC0+IGVtYWlsQ2FtcGFpZ25TZXJ2aWNlICJSb3V0ZXMgcmVxdWVzdHMgdG8iCiAgICAgICAgICAgIGFwaUdhdGV3YXkgLT4gYW5hbHl0aWNzU2VydmljZSAiUm91dGVzIHJlcXVlc3RzIHRvIgogICAgICAgIAogICAgICAgICAgICBjYW1wYWlnbk1hbmFnZXIgLT4gY2FtcGFpZ25EYXRhYmFzZSAiUmVhZHMgZnJvbSBhbmQgd3JpdGVzIHRvIgogICAgICAgICAgICBzZWdtZW50YXRpb25TZXJ2aWNlIC0+IHNlZ21lbnRhdGlvbkRhdGFiYXNlICJSZWFkcyBmcm9tIGFuZCB3cml0ZXMgdG8iCiAgICAgICAgICAgIGFuYWx5dGljc1NlcnZpY2UgLT4gYW5hbHl0aWNzRGF0YWJhc2UgIlJlYWRzIGZyb20gYW5kIHdyaXRlcyB0byIKICAgICAgICAKICAgICAgICAgICAgY2FtcGFpZ25NYW5hZ2VyIC0+IHNlZ21lbnRhdGlvblNlcnZpY2UgIkdldHMgY3VzdG9tZXIgc2VnbWVudHMgZnJvbSIKICAgICAgICAgICAgY2FtcGFpZ25NYW5hZ2VyIC0+IGVtYWlsQ2FtcGFpZ25TZXJ2aWNlICJTY2hlZHVsZXMgZW1haWwgY2FtcGFpZ25zIHZpYSIKICAgICAgICAgICAgZW1haWxDYW1wYWlnblNlcnZpY2UgLT4gZW1haWxTZXJ2aWNlICJTZW5kcyBlbWFpbHMgdmlhIgogICAgICAgICAgICBhbmFseXRpY3NTZXJ2aWNlIC0+IGFuYWx5dGljc1Byb3ZpZGVyICJTZW5kcyB0cmFja2luZyBkYXRhIHRvIgogICAgICAgICAgICBhbmFseXRpY3NTZXJ2aWNlIC0+IG1lc3NhZ2VRdWV1ZSAiUHVibGlzaGVzIGV2ZW50cyB0byIKICAgICAgICAgICAgY2FtcGFpZ25NYW5hZ2VyIC0+IG1lc3NhZ2VRdWV1ZSAiUHVibGlzaGVzIGV2ZW50cyB0byIKICAgICAgICAgICAgc2VnbWVudGF0aW9uU2VydmljZSAtPiBtZXNzYWdlUXVldWUgIlB1Ymxpc2hlcyBldmVudHMgdG8iCiAgICAgICAgCiAgICAgICAgICAgIG1hcmtldGluZ1N5c3RlbSAtPiBlY29tbWVyY2VTeXN0ZW0gIkltcG9ydHMgY3VzdG9tZXIgYW5kIG9yZGVyIGRhdGEgZnJvbSIKICAgICAgICB9CiAgICB9CgogICAgdmlld3MgewogICAgICAgIHN5c3RlbUNvbnRleHQgbWFya2V0aW5nU3lzdGVtICJTeXN0ZW1Db250ZXh0IiB7CiAgICAgICAgICAgIGluY2x1ZGUgKgogICAgICAgICAgICBhdXRvTGF5b3V0CiAgICAgICAgfQoKICAgICAgICBjb250YWluZXIgbWFya2V0aW5nU3lzdGVtICJDb250YWluZXJzIiB7CiAgICAgICAgICAgIGluY2x1ZGUgKgogICAgICAgICAgICBhdXRvTGF5b3V0CiAgICAgICAgfQoKICAgICAgICBzdHlsZXMgewogICAgICAgICAgICBlbGVtZW50ICJQZXJzb24iIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQgI2Y0OTY5NgogICAgICAgICAgICAgICAgY29sb3IgI2ZmZmZmZgogICAgICAgICAgICAgICAgZm9udFNpemUgMjIKICAgICAgICAgICAgICAgIHNoYXBlIFBlcnNvbgogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsZW1lbnQgIlNvZnR3YXJlIFN5c3RlbSIgewogICAgICAgICAgICAgICAgYmFja2dyb3VuZCAjMTE2OGJkCiAgICAgICAgICAgICAgICBjb2xvciAjZmZmZmZmCiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxlbWVudCAiQ29udGFpbmVyIiB7CiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kICM0MzhkZDUKICAgICAgICAgICAgICAgIGNvbG9yICNmZmZmZmYKICAgICAgICAgICAgfQogICAgICAgICAgICBlbGVtZW50ICJEYXRhYmFzZSIgewogICAgICAgICAgICAgICAgc2hhcGUgY3lsaW5kZXIKICAgICAgICAgICAgfQogICAgICAgICAgICBlbGVtZW50ICJFeHRlcm5hbCIgewogICAgICAgICAgICAgICAgYmFja2dyb3VuZCAjYzdjZWQ2CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9Cn0="
  },
  "views" : {
    "configuration" : {
      "branding" : { },
      "lastSavedView" : "Containers",
      "metadataSymbols" : "SquareBrackets",
      "styles" : {
        "elements" : [ {
          "background" : "#f49696",
          "color" : "#ffffff",
          "fontSize" : 22,
          "shape" : "Person",
          "tag" : "Person"
        }, {
          "background" : "#1168bd",
          "color" : "#ffffff",
          "tag" : "Software System"
        }, {
          "background" : "#438dd5",
          "color" : "#ffffff",
          "tag" : "Container"
        }, {
          "shape" : "Cylinder",
          "tag" : "Database"
        }, {
          "background" : "#c7ced6",
          "tag" : "External"
        } ]
      },
      "terminology" : { }
    },
    "containerViews" : [ {
      "automaticLayout" : {
        "applied" : true,
        "edgeSeparation" : 0,
        "implementation" : "Graphviz",
        "nodeSeparation" : 300,
        "rankDirection" : "TopBottom",
        "rankSeparation" : 300,
        "vertices" : false
      },
      "dimensions" : {
        "height" : 3991,
        "width" : 3868
      },
      "elements" : [ {
        "id" : "2",
        "x" : 3218,
        "y" : 3365
      }, {
        "id" : "10",
        "x" : 997,
        "y" : 165
      }, {
        "id" : "11",
        "x" : 2560,
        "y" : 2065
      }, {
        "id" : "12",
        "x" : 2468,
        "y" : 3365
      }, {
        "id" : "13",
        "x" : 972,
        "y" : 865
      }, {
        "id" : "14",
        "x" : 443,
        "y" : 1465
      }, {
        "id" : "15",
        "x" : 1810,
        "y" : 2765
      }, {
        "id" : "16",
        "x" : 1060,
        "y" : 2765
      }, {
        "id" : "17",
        "x" : 1501,
        "y" : 2115
      }, {
        "id" : "18",
        "x" : 1501,
        "y" : 1465
      }, {
        "id" : "19",
        "x" : 443,
        "y" : 2115
      }, {
        "id" : "20",
        "x" : 1168,
        "y" : 3365
      }, {
        "id" : "21",
        "x" : 418,
        "y" : 3365
      } ],
      "externalSoftwareSystemBoundariesVisible" : false,
      "key" : "Containers",
      "order" : 2,
      "relationships" : [ {
        "id" : "27"
      }, {
        "id" : "28",
        "vertices" : [ {
          "x" : 2439,
          "y" : 2465
        }, {
          "x" : 1660,
          "y" : 2765
        } ]
      }, {
        "id" : "29",
        "vertices" : [ {
          "x" : 1201,
          "y" : 1765
        } ]
      }, {
        "id" : "30",
        "vertices" : [ {
          "x" : 1118,
          "y" : 2067
        } ]
      }, {
        "id" : "31",
        "vertices" : [ {
          "x" : 2015,
          "y" : 2525
        } ]
      }, {
        "id" : "32",
        "vertices" : [ {
          "x" : 1629,
          "y" : 2674
        } ]
      }, {
        "id" : "33",
        "vertices" : [ {
          "x" : 1501,
          "y" : 1765
        } ]
      }, {
        "id" : "34",
        "vertices" : [ {
          "x" : 1275,
          "y" : 1812
        } ]
      }, {
        "id" : "35",
        "vertices" : [ {
          "x" : 1745,
          "y" : 2654
        } ]
      }, {
        "id" : "36",
        "vertices" : [ {
          "x" : 1381,
          "y" : 2505
        } ]
      }, {
        "id" : "37"
      }, {
        "id" : "38"
      }, {
        "id" : "39"
      }, {
        "id" : "40"
      }, {
        "id" : "41",
        "vertices" : [ {
          "x" : 2101,
          "y" : 1465
        }, {
          "x" : 2101,
          "y" : 2465
        } ]
      }, {
        "id" : "42"
      }, {
        "id" : "43",
        "vertices" : [ {
          "x" : 1660,
          "y" : 3065
        } ]
      }, {
        "id" : "44"
      }, {
        "id" : "45",
        "vertices" : [ {
          "x" : 293,
          "y" : 1465
        }, {
          "x" : 293,
          "y" : 2465
        } ]
      }, {
        "id" : "46",
        "vertices" : [ {
          "x" : 1043,
          "y" : 2065
        }, {
          "x" : 1043,
          "y" : 2465
        }, {
          "x" : 910,
          "y" : 2765
        } ]
      } ],
      "softwareSystemId" : "5"
    } ],
    "systemContextViews" : [ {
      "automaticLayout" : {
        "applied" : false,
        "edgeSeparation" : 0,
        "implementation" : "Graphviz",
        "nodeSeparation" : 300,
        "rankDirection" : "TopBottom",
        "rankSeparation" : 300,
        "vertices" : false
      },
      "elements" : [ {
        "id" : "2",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "3",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "5",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "10",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "11",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "12",
        "x" : 0,
        "y" : 0
      } ],
      "enterpriseBoundaryVisible" : true,
      "key" : "SystemContext",
      "order" : 1,
      "relationships" : [ {
        "id" : "22"
      }, {
        "id" : "23"
      }, {
        "id" : "24"
      }, {
        "id" : "25"
      }, {
        "id" : "26"
      }, {
        "id" : "47"
      } ],
      "softwareSystemId" : "5"
    } ]
  }
}